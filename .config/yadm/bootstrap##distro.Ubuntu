#!/usr/bin/env bash

# Bootstrap for Ubuntu/Debian
set -e

# Source common functions
source "$HOME/.config/yadm/bootstrap-common"

info "Starting bootstrap for Ubuntu/Debian..."

# Update package list
info "Updating package list..."
sudo apt update

# Install packages
info "Installing packages..."

# Base tools
sudo apt install -y \
    build-essential \
    git curl wget \
    tmux tree jq \
    software-properties-common \
    apt-transport-https \
    ca-certificates \
    gnupg lsb-release

# Development tools
sudo apt install -y \
    vim neovim \
    python3 python3-pip \
    nodejs npm \
    golang \
    ruby-full

# Modern CLI tools
info "Installing modern CLI tools..."

# Ripgrep
if ! command_exists rg; then
    curl -LO https://github.com/BurntSushi/ripgrep/releases/download/13.0.0/ripgrep_13.0.0_amd64.deb
    sudo dpkg -i ripgrep_13.0.0_amd64.deb
    rm ripgrep_13.0.0_amd64.deb
fi

# fd
if ! command_exists fd; then
    curl -LO https://github.com/sharkdp/fd/releases/download/v8.7.0/fd_8.7.0_amd64.deb
    sudo dpkg -i fd_8.7.0_amd64.deb
    rm fd_8.7.0_amd64.deb
fi

# bat
if ! command_exists bat; then
    curl -LO https://github.com/sharkdp/bat/releases/download/v0.23.0/bat_0.23.0_amd64.deb
    sudo dpkg -i bat_0.23.0_amd64.deb
    rm bat_0.23.0_amd64.deb
fi

# eza (exa successor)
if ! command_exists eza; then
    curl -LO https://github.com/eza-community/eza/releases/latest/download/eza_x86_64-unknown-linux-gnu.tar.gz
    tar -xzf eza_x86_64-unknown-linux-gnu.tar.gz
    sudo mv eza /usr/local/bin/
    rm eza_x86_64-unknown-linux-gnu.tar.gz
fi

# fzf
if ! command_exists fzf; then
    git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
    ~/.fzf/install --all
fi

# Shell
sudo apt install -y zsh fish

# Atuin (shell history)
if ! command_exists atuin; then
    curl --proto '=https' --tlsv1.2 -LsSf https://setup.atuin.sh | sh
fi

# zoxide
if ! command_exists zoxide; then
    curl -sS https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | bash
fi

# starship
if ! command_exists starship; then
    curl -sS https://starship.rs/install.sh | sh
fi

# gomi
if ! command_exists gomi; then
    go install github.com/b4b4r07/gomi/...@latest
fi

# Optional tools
sudo apt install -y \
    htop ncdu tldr \
    gnupg pass \
    ffmpeg imagemagick \
    pandoc

# Install Rust
if ! command_exists cargo; then
    info "Installing Rust..."
    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
    source "$HOME/.cargo/env"
fi

success "Packages installed"

# Setup XDG and tools
create_xdg_dirs
setup_vim
setup_zsh
install_mise
setup_mise_tools

post_install