" =============================================================================
" Vim Configuration (Simple version without dpp.vim)
" =============================================================================

" Vim-Plug compatibility layer for easier migration
if &compatible
  set nocompatible
endif

" XDG Base Directory support
" Set default XDG directories if not already set
if empty($XDG_CONFIG_HOME)
  let $XDG_CONFIG_HOME = expand('~/.config')
endif
if empty($XDG_DATA_HOME)
  let $XDG_DATA_HOME = expand('~/.local/share')
endif
if empty($XDG_STATE_HOME)
  let $XDG_STATE_HOME = expand('~/.local/state')
endif
if empty($XDG_CACHE_HOME)
  let $XDG_CACHE_HOME = expand('~/.cache')
endif

let $MYVIMRC = expand('$XDG_CONFIG_HOME/vim/vimrc')
let $VIM_CONFIG_HOME = expand('$XDG_CONFIG_HOME/vim')
set runtimepath^=$VIM_CONFIG_HOME
set runtimepath+=$VIM_CONFIG_HOME/after
set packpath^=$VIM_CONFIG_HOME
let g:netrw_home = expand('$XDG_DATA_HOME/vim')
call mkdir(expand('$XDG_DATA_HOME/vim/spell'), 'p')
call mkdir(expand('$XDG_STATE_HOME/vim/undo'), 'p')
call mkdir(expand('$XDG_STATE_HOME/vim/backup'), 'p')
call mkdir(expand('$XDG_STATE_HOME/vim/swap'), 'p')
call mkdir(expand('$XDG_STATE_HOME/vim/view'), 'p')
call mkdir(expand('$XDG_CACHE_HOME/vim'), 'p')

" Vim settings for XDG
set viminfofile=$XDG_STATE_HOME/vim/viminfo
set undodir=$XDG_STATE_HOME/vim/undo//
set directory=$XDG_STATE_HOME/vim/swap//
set backupdir=$XDG_STATE_HOME/vim/backup//
set viewdir=$XDG_STATE_HOME/vim/view//

" Load separate configuration files
runtime! options.vim
runtime! mappings.vim
runtime! autocmds.vim
runtime! lsp.vim

" Load additional integrations if available
if filereadable(expand('$VIM_CONFIG_HOME/wsl-clipboard.vim'))
  runtime wsl-clipboard.vim
endif
if filereadable(expand('$VIM_CONFIG_HOME/opam-integration.vim'))
  runtime opam-integration.vim
endif

" =============================================================================
" Basic Options (before plugins)
" =============================================================================
set encoding=utf-8
set fileencoding=utf-8
set fileencodings=utf-8,iso-2022-jp,euc-jp,sjis
set fileformats=unix,dos,mac

" UI
set number relativenumber
set cursorline
set showmatch
set wildmenu wildmode=list:longest,full
set pumheight=10
set laststatus=2
set showcmd
set ruler

" Editor
set expandtab tabstop=2 shiftwidth=2 softtabstop=2
set autoindent smartindent
set wrap linebreak
set backspace=indent,eol,start

" Search
set ignorecase smartcase
set incsearch hlsearch
set wrapscan

" Performance
set updatetime=300
set timeoutlen=500
set lazyredraw
set ttyfast

" Files
set hidden
set autoread
set undofile
set backup
set swapfile

" =============================================================================
" Color Scheme
" =============================================================================
syntax enable
set background=dark
set termguicolors

" Fallback colorscheme
try
  colorscheme iceberg
catch
  colorscheme desert
endtry

" =============================================================================
" Filetype Settings
" =============================================================================
filetype plugin indent on

" =============================================================================
" Auto Commands
" =============================================================================
augroup vimrc
  autocmd!
  " Auto reload vimrc
  autocmd BufWritePost $MYVIMRC source $MYVIMRC
  " Remove trailing whitespace
  autocmd BufWritePre * :%s/\s\+$//e
  " Restore cursor position
  autocmd BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
augroup END

" =============================================================================
" Final Setup
" =============================================================================
" Enable mouse
if has('mouse')
  set mouse=a
endif

" Clipboard integration
if has('clipboard')
  set clipboard=unnamedplus
endif

" True color support
if has('termguicolors')
  let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
  let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
endif