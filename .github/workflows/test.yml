name: Test Installation

on:
  push:
    branches: [ main, master, yadm-backup ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    
    steps:
      - name: Setup environment
        run: |
          # Create necessary directories
          mkdir -p "$HOME/.config"
          mkdir -p "$HOME/.local/bin"
          
      - name: Install yadm
        run: |
          if [[ "${{ runner.os }}" == "macOS" ]]; then
            brew install yadm
          else
            sudo apt-get update && sudo apt-get install -y yadm
          fi
          
      - name: Clone dotfiles
        run: |
          # Clone with HTTPS to avoid SSH key issues
          yadm clone https://github.com/${{ github.repository }}.git --no-bootstrap
          
          # Checkout the specific commit
          cd "$HOME"
          yadm checkout ${{ github.sha }} || yadm checkout ${{ github.ref_name }}
          
      - name: Set yadm config
        run: |
          # Set class to CI to avoid interactive prompts
          yadm config local.class ci
          
          # Show yadm status for debugging
          yadm status
          yadm list -a | head -20
          
      - name: Run yadm alt
        run: |
          cd "$HOME"
          yadm alt
          
          # Debug: Show what was linked
          echo "=== Checking alternates ==="
          ls -la "$HOME/.config/yadm/" || true
          ls -la "$HOME/.config/zsh/" || true
          
      - name: Make bootstrap executable
        run: |
          chmod +x "$HOME/.config/yadm/bootstrap" || true
          chmod +x "$HOME/.config/yadm/install" || true
          chmod +x "$HOME/.config/yadm/install##os."* || true
          
      - name: Run bootstrap
        run: |
          cd "$HOME"
          
          # Set environment variables for CI
          export YADM_BOOTSTRAP=1  # Allow direct execution
          export YADM_SKIP_CONFIG=1  # Skip interactive configuration
          export YADM_CLASS=ci  # Set class via environment
          export YADM_BOOTSTRAP_MACOS_SETTINGS=false  # Skip macOS system settings
          
          # Run bootstrap
          "$HOME/.config/yadm/bootstrap"
          
      - name: Verify basic installation
        run: |
          echo "=== Checking installed files ==="
          
          # Check config files
          if [[ -f "$HOME/.config/zsh/.zshrc" ]]; then
            echo "✓ .zshrc found"
          else
            echo "✗ .zshrc not found"
            ls -la "$HOME/.config/zsh/" || true
          fi
          
          if [[ -f "$HOME/.config/mise/config.toml" ]]; then
            echo "✓ mise config found"
          else
            echo "✗ mise config not found"
            ls -la "$HOME/.config/mise/" || true
          fi
          
          # Check commands (may not be in PATH yet)
          echo "=== Checking commands ==="
          command -v zsh && echo "✓ zsh found" || echo "✗ zsh not found"
          
          # Check mise in common locations
          if command -v mise; then
            echo "✓ mise found in PATH"
          elif [[ -x "$HOME/.local/bin/mise" ]]; then
            echo "✓ mise found in ~/.local/bin"
          else
            echo "✗ mise not found"
          fi
          
      - name: Test zsh config loading
        run: |
          # Only test if zsh is available
          if command -v zsh && [[ -f "$HOME/.config/zsh/.zshrc" ]]; then
            echo "=== Testing zsh config ==="
            # Set ZDOTDIR to use our config
            export ZDOTDIR="$HOME/.config/zsh"
            
            # Try to load the config (may fail due to missing tools)
            zsh -c 'source $ZDOTDIR/.zshrc; echo "Zsh config loaded"' || {
              echo "Note: Zsh config failed to load completely (this is expected in CI)"
            }
          fi