name: Test Installation

on:
  push:
    branches: [ main, master, yadm-backup ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-15, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    
    steps:
      - name: Install yadm
        run: |
          if [[ "${{ runner.os }}" == "macOS" ]]; then
            brew install yadm
          else
            sudo apt-get update
            sudo apt-get install -y curl
            
            # Install newer yadm from GitHub
            curl -fLo /tmp/yadm https://github.com/yadm-dev/yadm/raw/master/yadm
            sudo mv /tmp/yadm /usr/local/bin/yadm
            sudo chmod a+x /usr/local/bin/yadm
          fi
          
      - name: Clone dotfiles
        run: |
          # Remove any existing git config that might cause issues
          rm -f "$HOME/.config/git/config"
          
          # Set HOME to avoid permission issues
          cd "$HOME"
          
          # Clone dotfiles with branch
          yadm clone https://github.com/${{ github.repository }}.git --no-bootstrap -f -b ${{ github.ref_name }} || {
            echo "Failed to clone ${{ github.ref_name }}, trying default"
            yadm clone https://github.com/${{ github.repository }}.git --no-bootstrap -f
          }
          
          # Checkout specific commit
          yadm checkout ${{ github.sha }} || true
          
      - name: Set yadm config
        run: |
          # Set class for CI
          yadm config local.class ci
          
          # Debug: Show current status
          echo "=== YADM status ==="
          yadm status || true
          
      - name: Run yadm alt
        run: |
          cd "$HOME"
          yadm alt
          
          # Debug: Show what files were created
          echo "=== Files in .config/yadm ==="
          ls -la "$HOME/.config/yadm/" || true
          
      - name: Make scripts executable
        run: |
          # Ensure bootstrap scripts are executable
          chmod +x "$HOME/.config/yadm/bootstrap" || true
          find "$HOME/.config/yadm" -name "install*" -type f -exec chmod +x {} \; || true
          
      - name: Test bootstrap
        run: |
          cd "$HOME"
          
          # Set environment for non-interactive execution
          export YADM_BOOTSTRAP=1
          export YADM_SKIP_CONFIG=1
          export YADM_CLASS=ci
          export YADM_BOOTSTRAP_MACOS_SETTINGS=false
          
          # Run bootstrap
          if [[ -f "$HOME/.config/yadm/bootstrap" ]]; then
            echo "=== Running bootstrap ==="
            "$HOME/.config/yadm/bootstrap" || {
              echo "Bootstrap failed with exit code: $?"
              # Continue to see what was installed
            }
          else
            echo "ERROR: bootstrap not found"
            ls -la "$HOME/.config/yadm/"
            exit 1
          fi
          
      - name: Verify installation
        run: |
          echo "=== Verification ==="
          
          # Check key files
          echo "Checking .zshrc..."
          if [[ -f "$HOME/.config/zsh/.zshrc" ]]; then
            echo "✓ .zshrc exists"
            head -5 "$HOME/.config/zsh/.zshrc"
          else
            echo "✗ .zshrc not found"
          fi
          
          echo ""
          echo "Checking mise config..."
          if [[ -f "$HOME/.config/mise/config.toml" ]]; then
            echo "✓ mise config exists"
          else
            echo "✗ mise config not found"
          fi
          
          echo ""
          echo "Checking for mise binary..."
          if [[ -f "$HOME/.local/bin/mise" ]]; then
            echo "✓ mise binary exists"
            "$HOME/.local/bin/mise" --version || true
          elif command -v mise >/dev/null 2>&1; then
            echo "✓ mise in PATH"
            mise --version || true
          else
            echo "✗ mise not found"
          fi